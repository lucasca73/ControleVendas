/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import modelo.Produto;

/**
 *
 * @author Lucas
 */
public class MenuCarrinhoJPanel extends javax.swing.JPanel {

    private ArrayList<Produto> bancoDeProdutos = new ArrayList<>();
    private DefaultTableModel modeloTabelaProdutosPesquisa;
    private DefaultTableModel modeloTabelaProdutosCarrinho;
    private MainJFrame principalJFrame;
    private ArrayList<Produto> produtosDoCarrinho;
    
    private MenuQuartoJPanel telaAnterior;
    /**
     * Creates new form MenuCarrinhoJPanel
     */
    public MenuCarrinhoJPanel(MenuQuartoJPanel telaAnterior,MainJFrame mainFrame) {
        initComponents();
        initModelosTabelas();
        parseProdutos();
        this.telaAnterior = telaAnterior;
        
        principalJFrame = mainFrame;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        pesquisajTextField = new javax.swing.JTextField();
        adicionarAoCarrinhojButton = new javax.swing.JButton();
        removerDoCarrinhojButton = new javax.swing.JButton();
        confirmarjButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cancelarjButton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tabelaProdutosCarrinho = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        tabelaProdutosPesquisa = new javax.swing.JTable();

        jLabel1.setText("Pesquisa");

        pesquisajTextField.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                pesquisajTextFieldInputMethodTextChanged(evt);
            }
        });
        pesquisajTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pesquisajTextFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pesquisajTextFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pesquisajTextFieldKeyTyped(evt);
            }
        });

        adicionarAoCarrinhojButton.setText("Adicionar ao Carrinho");
        adicionarAoCarrinhojButton.setEnabled(false);
        adicionarAoCarrinhojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarAoCarrinhojButtonActionPerformed(evt);
            }
        });

        removerDoCarrinhojButton.setText("Remover do Carrinho");
        removerDoCarrinhojButton.setEnabled(false);

        confirmarjButton.setText("Confirmar");
        confirmarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarjButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Carrinho");

        cancelarjButton.setText("Cancelar");
        cancelarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarjButtonActionPerformed(evt);
            }
        });

        tabelaProdutosCarrinho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Preco", "Quantidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaProdutosCarrinho.getTableHeader().setReorderingAllowed(false);
        tabelaProdutosCarrinho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaProdutosCarrinhoMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tabelaProdutosCarrinho);
        if (tabelaProdutosCarrinho.getColumnModel().getColumnCount() > 0) {
            tabelaProdutosCarrinho.getColumnModel().getColumn(0).setResizable(false);
            tabelaProdutosCarrinho.getColumnModel().getColumn(1).setResizable(false);
            tabelaProdutosCarrinho.getColumnModel().getColumn(2).setResizable(false);
        }

        tabelaProdutosPesquisa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Preco"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaProdutosPesquisa.getTableHeader().setReorderingAllowed(false);
        tabelaProdutosPesquisa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaProdutosPesquisaMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tabelaProdutosPesquisa);
        if (tabelaProdutosPesquisa.getColumnModel().getColumnCount() > 0) {
            tabelaProdutosPesquisa.getColumnModel().getColumn(0).setResizable(false);
            tabelaProdutosPesquisa.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pesquisajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(adicionarAoCarrinhojButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(removerDoCarrinhojButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelarjButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(confirmarjButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(pesquisajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(adicionarAoCarrinhojButton)
                    .addComponent(removerDoCarrinhojButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmarjButton)
                    .addComponent(cancelarjButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cancelarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarjButtonActionPerformed
        
        this.setVisible(false);
        telaAnterior.setVisible(true);
        principalJFrame.setContentPane(telaAnterior);
    }//GEN-LAST:event_cancelarjButtonActionPerformed

    private void tabelaProdutosCarrinhoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaProdutosCarrinhoMouseClicked
        int produtoSelecionado = tabelaProdutosCarrinho.getSelectedRow();

        if(produtoSelecionado >= 0 && produtoSelecionado <= tabelaProdutosCarrinho.getRowCount()){
            //pagarProdutojButton.setEnabled(true);
        }
        else
            System.out.println("Produto nao encontrado");
    }//GEN-LAST:event_tabelaProdutosCarrinhoMouseClicked

    private void tabelaProdutosPesquisaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaProdutosPesquisaMouseClicked
        int produtoSelecionado = tabelaProdutosPesquisa.getSelectedRow();
        
        if(produtoSelecionado >= 0 && produtoSelecionado <= tabelaProdutosPesquisa.getRowCount()){
            adicionarAoCarrinhojButton.setEnabled(true);
        }
        else
           System.out.println("Produto nao encontrado");
    }//GEN-LAST:event_tabelaProdutosPesquisaMouseClicked

    private void pesquisajTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pesquisajTextFieldKeyTyped
        //pesquisa();
    }//GEN-LAST:event_pesquisajTextFieldKeyTyped

    private void adicionarAoCarrinhojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarAoCarrinhojButtonActionPerformed

        

        
        String nomeProduto =(String) modeloTabelaProdutosPesquisa.getValueAt(tabelaProdutosPesquisa.getSelectedRow(),0);

        Produto produtoPesquisado = getProdutoPorNome(nomeProduto);
        
        AdicaoAoCarrinhoDialog confirmacao = new AdicaoAoCarrinhoDialog(principalJFrame, true, this, produtoPesquisado);
        principalJFrame.getContentPane().setEnabled(false);
        confirmacao.setLocationRelativeTo(this);
        confirmacao.setVisible(true);
        confirmacao.setEnabled(true);
        
        
        adicionarAoCarrinhojButton.setEnabled(false);
    }//GEN-LAST:event_adicionarAoCarrinhojButtonActionPerformed

    private void pesquisajTextFieldInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_pesquisajTextFieldInputMethodTextChanged
        //pesquisa();
    }//GEN-LAST:event_pesquisajTextFieldInputMethodTextChanged

    private void pesquisajTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pesquisajTextFieldKeyPressed
        //pesquisa();
    }//GEN-LAST:event_pesquisajTextFieldKeyPressed

    private void pesquisajTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pesquisajTextFieldKeyReleased
        pesquisa();
    }//GEN-LAST:event_pesquisajTextFieldKeyReleased

    private void confirmarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarjButtonActionPerformed
        
        //Pedir ao quarto para adicionar produtos
        if(produtosDoCarrinho != null)
            telaAnterior.adicionarCarrinho(produtosDoCarrinho);
        
        //Mudar para tela anterior
        this.setVisible(false);
        this.setEnabled(false);
        telaAnterior.setVisible(true);
        telaAnterior.setEnabled(true);
        principalJFrame.setContentPane(telaAnterior);
        
    }//GEN-LAST:event_confirmarjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adicionarAoCarrinhojButton;
    private javax.swing.JButton cancelarjButton;
    private javax.swing.JButton confirmarjButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextField pesquisajTextField;
    private javax.swing.JButton removerDoCarrinhojButton;
    private javax.swing.JTable tabelaProdutosCarrinho;
    private javax.swing.JTable tabelaProdutosPesquisa;
    // End of variables declaration//GEN-END:variables

    private void parseProdutos(){

        for(int i = 0; i < 10; i++){
            Produto novoProduto = new Produto();
            novoProduto.setNome("Produto " + String.valueOf(i));
            novoProduto.setPreco(String.valueOf(i*10));

            bancoDeProdutos.add(novoProduto);
        }
        
        Produto novoProduto1 = new Produto();
            novoProduto1.setNome("Agua Com Gas" );
            novoProduto1.setPreco("3,00");
            
            bancoDeProdutos.add(novoProduto1);
            
            Produto novoProduto2 = new Produto();
            novoProduto2.setNome("Agua Mineral ");
            novoProduto2.setPreco("2,00");
            
            bancoDeProdutos.add(novoProduto2);
            
            Produto novoProduto3 = new Produto();
            novoProduto3.setNome("Agua Fluidificada " );
            novoProduto3.setPreco("1,00");
        
            bancoDeProdutos.add(novoProduto3);
            
        for(Produto produto: bancoDeProdutos)
        {
            modeloTabelaProdutosPesquisa.addRow(produto.getArrayStringDeDados());               
        }
    }

    private void pesquisa(){
        if(pesquisajTextField.getText().isEmpty()){
            atualizarTabela(bancoDeProdutos);
        }
        else{
            ArrayList<Produto> listaAtualizada = new ArrayList<>();
            
            for(Produto produto: bancoDeProdutos){
                if(((String)produto.getNome()).toLowerCase().startsWith(pesquisajTextField.getText().toLowerCase()) )
                {
                    listaAtualizada.add(produto);
                }
            }

            atualizarTabela(listaAtualizada);

        }
    }

    private void atualizarTabela(ArrayList<Produto> listaProduto){
        
        if(listaProduto != null)
        {
            int rowCount = modeloTabelaProdutosPesquisa.getRowCount();
            for(int i = 0; i < rowCount; i++)
            {
                //Remove sempre topo da lista
                modeloTabelaProdutosPesquisa.removeRow(0);
            }
            
            
        }
        
        for(int i = 0; i < listaProduto.size(); i++)
        {
            Produto produto = listaProduto.get(i);
            modeloTabelaProdutosPesquisa.addRow(produto.getArrayStringDeDados());
        }
        
    }

    private void initModelosTabelas(){
        modeloTabelaProdutosPesquisa = (DefaultTableModel) this.tabelaProdutosPesquisa.getModel();
        modeloTabelaProdutosCarrinho = (DefaultTableModel) this.tabelaProdutosCarrinho.getModel();
    }
    
    private Produto getProdutoPorNome(String nomeProduto){
        
        for(int i = 0; i < bancoDeProdutos.size(); i++)
        {
            Produto produto = bancoDeProdutos.get(i);
            if(produto.getNome().equals(nomeProduto))
                return produto;
        }
        
        return null;
    }
    
    public void addProdutoEmTabelaCarrinho(Produto produto){
        
        String[] arrayDados = new String[3];
        arrayDados[0] = produto.getNome();
        arrayDados[1] = produto.getPreco();
        arrayDados[2] = String.valueOf(produto.getQuantidade());
        
        modeloTabelaProdutosCarrinho.addRow(arrayDados);
        
    }
    
    public void adicionarProdutoAlistaCarrinho(Produto produto){
        if(produtosDoCarrinho == null)
            produtosDoCarrinho = new ArrayList<>();
        
        produtosDoCarrinho.add(produto);
    }
    
}

